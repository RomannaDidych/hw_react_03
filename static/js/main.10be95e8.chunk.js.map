{"version":3,"sources":["Components/Timer.js","App.js","reportWebVitals.js","index.js"],"names":["Timer","state","timing","props","timer","autostart","time","bar","componentDidMount","timerID","setInterval","tick","timeTick","currentTime","currentBar","barTick","setState","showButtonState","createTimeString","checkTime","i","ms","sec","Math","floor","str","console","log","handleClick","e","style","width","this","className","onClick","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAyEeA,G,kNApEbC,MAAQ,CACPC,OAAQ,EAAKC,MAAMC,MAAMC,UACzBC,KAAM,EAAKH,MAAMC,MAAME,KACvBC,IAAK,K,EAGNC,kBAAoB,WAChB,EAAKC,QAAUC,aAAY,kBAAM,EAAKC,SAAQ,EAAKR,MAAMC,MAAMQ,W,EAGnED,KAAO,WACN,IAAME,EAAc,EAAKZ,MAAMK,KACzBQ,EAAa,EAAKb,MAAMM,IACxBQ,EAAU,KAAK,EAAKZ,MAAMC,MAAME,KAAK,EAAKH,MAAMC,MAAMQ,WACnC,IAAtB,EAAKX,MAAMC,SACVW,EAAc,GAChB,EAAKG,SAAS,CAACV,KAAMO,EAAc,EAAKV,MAAMC,MAAMQ,WACpD,EAAKI,SAAS,CAACT,IAAKO,EAAaC,KAEjC,EAAKC,SAAS,CACbd,QAAQ,EACRI,KAAM,EAAKH,MAAMC,MAAME,KACvBC,IAAK,Q,EAQNU,gBAAiB,WAEhB,OAA6B,IAAtB,EAAKhB,MAAMC,OAAkB,OAAS,S,EAKjDgB,iBAAmB,SAACZ,GACnB,IAAMa,EAAY,SAACC,GAAO,OAAOA,EAAE,GAAK,IAAIA,EAAIA,GAC1CC,EAAKF,EAAUb,EAAK,KACpBgB,EAAMH,EAAUI,KAAKC,MAAMlB,EAAK,MAEhCmB,EADMN,EAAUI,KAAKC,MAAMlB,EAAK,MACpB,IAAMgB,EAAM,IAAMD,EAEpC,OADAK,QAAQC,IAAIF,GACLA,G,EAGRG,YAAc,SAACC,GAEd,EAAK5B,MAAMC,OAAS,EAAKc,SAAS,CAACd,QAAQ,IAAU,EAAKc,SAAS,CAACd,QAAQ,K,uDAI5E,IAAM4B,EAAQ,CAACC,MAAOC,KAAK/B,MAAMM,IAAI,KACrC,OACC,sBAAK0B,UAAW,QAAhB,UACC,qBAAKA,UAAU,aAAf,SACC,4BAAID,KAAKd,iBAAiBc,KAAK/B,MAAMK,UAEtC,wBAAQ2B,UAAW,cAAcC,QAASF,KAAKJ,YAA/C,SAA6DI,KAAKf,oBAClE,qBAAKgB,UAAU,cAAcH,MAAOA,W,GA9DrBK,cCiBLC,MAjBf,WACE,OACE,sBAAKH,UAAU,MAAf,UACE,cAAC,EAAD,CAAO7B,MAAO,CACNE,KAAM,IACNM,SAAU,IACVP,WAAW,KAEnB,cAAC,EAAD,CAAOD,MAAO,CACNE,KAAM,IACNM,SAAU,IACVP,WAAW,SCFVgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.10be95e8.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './styles.css';\r\n\r\nclass Timer extends Component {\r\n\t\r\n\t\tstate = {\r\n\t\t\ttiming: this.props.timer.autostart,\r\n\t\t\ttime: this.props.timer.time,\r\n\t\t\tbar: 100\t\t\t\r\n\t\t};\r\n\t\r\n\t\tcomponentDidMount = () => {\r\n\t\t\t\t\t\tthis.timerID = setInterval(() => this.tick(), this.props.timer.timeTick); \r\n\t\t }\r\n\r\n\t\ttick = () => {\r\n\t\t\tconst currentTime = this.state.time;\r\n\t\t\tconst currentBar = this.state.bar;\r\n\t\t\tconst barTick = 100/(this.props.timer.time/this.props.timer.timeTick); \r\n\t\t\tif(this.state.timing === true){\r\n\t\t\t\tif(currentTime > 0){\r\n\t\t\t\t\tthis.setState({time: currentTime - this.props.timer.timeTick});\r\n\t\t\t\t\tthis.setState({bar: currentBar - barTick})\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\ttiming: false, \r\n\t\t\t\t\t\ttime: this.props.timer.time,\r\n\t\t\t\t\t\tbar: 100\r\n\t\t\t\t\t})\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\t\r\n\t\t}\r\n\r\n\r\n\t  \t showButtonState= () => {\r\n\t  \t \t/*console.log(this.state.timing)*/\r\n\t  \t \treturn this.state.timing === true ? \"stop\" : \"start\"\r\n\t  \t } \r\n\t  \t\r\n\t \r\n\r\n\t\tcreateTimeString = (time) => {\t\t\t\r\n\t\t\tconst checkTime = (i) => {return i<10 ? '0'+i : i};\t  \t\r\n\t\t\tconst ms = checkTime(time%1000);\r\n\t\t\tconst sec = checkTime(Math.floor(time/1000));\r\n\t\t\tconst min = checkTime(Math.floor(time/60000));\r\n\t\t\tconst str = min + ':' + sec + ':' + ms;\r\n\t\t\tconsole.log(str);\t\t\t\r\n\t\t\treturn str;\r\n\t\t}\t\t\r\n\r\n\t\thandleClick = (e) =>{\t\t\t\r\n\t\t\t\r\n\t\t\tthis.state.timing ? this.setState({timing: false}) : this.setState({timing: true})\r\n\t\t}\r\n\r\n\t\trender(){\r\n\t\t\tconst style = {width: this.state.bar+\"%\"}\r\n\t\t\treturn (\r\n\t\t\t\t<div className= 'timer'>\r\n\t\t\t\t\t<div className='timerBlock'>\r\n\t\t\t\t\t\t<p>{this.createTimeString(this.state.time)}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button className= 'startButton' onClick={this.handleClick}>{this.showButtonState()}</button>\r\n\t\t\t\t\t<div className='progressBar' style={style}></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t}\r\n\t\r\n\r\n}\r\n\r\nexport default Timer;\r\n\r\n//<div className=\"bar\" style={style}></div>","import './App.css';\nimport Timer from './Components/Timer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Timer timer={{\n              time: 5000,\n              timeTick: 500,\n              autostart: false\n            }} />\n      <Timer timer={{\n              time: 10000,\n              timeTick: 1000,\n              autostart: true\n            }} />         \n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}